package main

import "fmt"

type point struct {
	x, y int
}

func main() {

	// Выводим структуру
	p := point{1, 2}
	// Выводит только значения полей
	fmt.Printf("p = %v\n", p)
	// Выводит значения полей с ключами
	fmt.Printf("p = %+v\n", p)
	// Выводить контекст вызова и поля с ключами
	fmt.Printf("p = %#v\n", p)
	// Выводит только контекст вызова
	fmt.Printf("p = %T\n", p)
	
	// Вывод переменных различного типа
	fmt.Printf("Логическая переменная, p = %t\n", true)

	fmt.Printf("В числовой форме, p = %d\n", 1223)
	fmt.Printf("В числовой форме, p = %d\n", 1223.223)

	fmt.Printf("В двоичной форме, p = %b\n", 14)

	fmt.Printf("char, p = %c\n", "33")

	fmt.Printf("Шестнадцатиричная форма, p = %x\n", 10)
	
	fmt.Printf("Научный формат числа, p = %e\n", 146000000.0)
	fmt.Printf("Научный формат числа, p = %E\n", 146000000.0)
	
	fmt.Printf("Строковый формат, p = %s\n", "\"строка\"")

	fmt.Printf("Вывод как в коде, p = %q\n", "\"строка\"")

	fmt.Printf("Шестнадцатиричное представление строки, p = %x\n", "строка")

	fmt.Printf("Представление указателя, p = %p\n", &p)

	fmt.Println("Форматированная табличка")
	fmt.Printf("|%6s|%6s|\n", "X", "Y")
	fmt.Println("---------------")
	fmt.Printf("|%6d|%6d|\n", 12, 32)
	fmt.Printf("|%6.2f|%6.2f|\n", 12.23232, 32.555553)
	fmt.Printf("|%-6d|%-6d|\n", 12, 32)
}
